// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Status {
  MENUNGGU
  DISETUJUI
  DITOLAK
}

enum Role {
  ADMIN
  OPERATOR
  UMUM
  MAHASISWA
  STAFF
}

enum Categories {
  LAPANGAN_INDOOR
  LAPANGAN_OUTDOOR
}

enum UserRole {
  UMUM
  MAHASISWA
  STAFF
}

model users {
  id String @id @default(cuid())
  name String
  email String @unique
  nip String
  npm String
  password String?
  role Role
  phoneNumber String 
  emailVerifiedAt DateTime? 
  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
  deletedAt DateTime? 

  transactions transactions[] @relation("userTransactions")
  handled_transactions transactions[] @relation("adminHandlerTransactions")
}

model passwordResetTokens {
  email        String   @id 
  token        String   
  createdAt DateTime @default(now()) 
}

model facilities {
  id String @id @default(cuid()) 
  name String
  categories Categories
  description String @db.Text
  nightTime Boolean 
  show Boolean
  createdAt DateTime @default(now())  @db.Timestamp(0)
  updatedAt DateTime @updatedAt  @db.Timestamp(0)
  deletedAt DateTime?  @db.Timestamp(0)

  facilityImages facilityImages[]
  pricing pricing[]
  transactions transactions[]
}

model pricing {
  id String @id @default(cuid()) 
  facilityId String 
  userType UserRole 
  hourlyRate Decimal  @db.Decimal(10, 2)
  dailyRate Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())  @db.Timestamp(0)
  updatedAt DateTime @updatedAt  @db.Timestamp(0)

  facility facilities @relation(fields: [facilityId], references: [id])
}

model facilityImages {
  id String @id @default(cuid())
  facilityId String  
  image1Path String 
  image2Path String 
  image3Path String? 
  image4Path String? 
  createdAt DateTime @default(now())  @db.Timestamp(0)
  updatedAt DateTime @updatedAt  @db.Timestamp(0)

  facility facilities @relation(fields: [facilityId], references: [id])
}

model transactions {
  id String @id @default(cuid()) 
  userId String 
  adminHandlerId String 
  facilityId String 
  guestName String 
  guestEmail String 
  guestNip String? 
  guestNpm String? 
  guestRole UserRole 
  activityName String 
  transactionCode String 
  scheduleStart DateTime  @db.Timestamp(0)
  scheduleEnd DateTime  @db.Timestamp(0)
  durationHours Int 
  description String @db.Text
  phoneNumber String 
  amount Decimal  @db.Decimal(10, 2)
  downPaymentAmount Decimal  @db.Decimal(10, 2)
  proofOfPaymentPath String 
  status Status
  createdAt DateTime @default(now())  @db.Timestamp(0)
  updatedAt DateTime @updatedAt  @db.Timestamp(0)
  deletedAt DateTime?  @db.Timestamp(0)

  user users @relation("userTransactions", fields: [userId], references: [id])
  adminHandler users? @relation("adminHandlerTransactions", fields: [adminHandlerId], references: [id])
  facility facilities @relation(fields: [facilityId], references: [id])
  rejectedTransactions rejectedTransactions[]
  
}

model rejectedTransactions {
  id String @id @default(cuid()) 
  transactionId String 
  reason String
  createdAt DateTime @default(now())  @db.Timestamp(0)
  updatedAt DateTime @updatedAt  @db.Timestamp(0)

  transaction transactions @relation(fields: [transactionId], references: [id])
}